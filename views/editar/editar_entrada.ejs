<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Editar usuário</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Manrope:wght@200..800&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');

        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 0;
            padding: 0;
            height: 100vh;
            width: 100vw;
        }

        h2{
            font-family: "Manrope";
        }
        #editar-usuario{
            padding: 20px;
            box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px;
            border-radius: 20px;
            background-color: white;
        }

        .containerItens{
            display: flex;
            gap: 10px;
            width: 100%;
        }

        .itens{
            display: flex;
            flex-direction: column;
            width: 100%;
        }



        label {
            display: block;
            font-family: "Roboto";
            font-weight: bold;

        }
        input[type="text"],
        input[type="date"],
        input[type="number"],
        input[type="email"],
        input[type="password"],
        select {
            width: 100%;
            padding: 8px;
            margin-bottom: 15px;
            border: 1px solid #ccc;
            border-radius: 3px;
            box-sizing: border-box;
        }

        button[type="submit"] {
            background-color: #2e6db1;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
            transition: background-color 0.2s ease;
            font-family: "Roboto";
            font-size: 15px;
        }
        button[type="submit"]:hover {
            background-color: #007bff;
            
        }

        #botao-editar {
            float: right;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 8px 15px;
            cursor: pointer;
            background-color: #007bff;
            
        }
        #botao-deletar {
            float: right;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 8px 15px;
            margin-right: 10px;
            cursor: pointer;
            background-color: darkred;
        }
        h1 {
            display: flex;
        }
        #botaoVoltar {
            position: absolute;
            top: 30px;
            left: 30px;
            text-decoration: none;
            font-size: 15px;
            margin-right: 20px;
            border-radius: 4px;
            cursor: pointer;
            color: white;
            background-color: #2e6db1;
            padding: 10px;
            border: none;
            transition: background-color 0.2s ease;

            &:hover{
                background-color: #007bff;
            }
        }
    </style>
</head>
<body>
    <div id="editar-usuario">
        <a href="/admin/cadastrar-entrada" id="botaoVoltar">Voltar</a> 
        <h2>Editar entrada</h2>
        <form id="userForm" action="/admin/editar-entrada" method="POST">
            <section class="containerItens">
            <div class="itens">
                <label for="type">Tipo:</label>
                    <select id="type" name="type" required>
                        <option value="Receita" <%= entry.type === 'Receita' ? 'selected' : '' %>>Receita</option>
                        <option value="Despesa" <%= entry.type === 'Despesa' ? 'selected' : '' %>>Despesa</option>
                    </select>
                </div>
                <div class="itens">
                    <label for="categories">Categoria:</label>
                    <select id="categories" name="categories" value="<%= entry.categories %>" required>
                    </select>
                </div>
            </section>

            <section class="containerItens">
                <div class="itens">
                    <label for="description">Descriçao:</label>
                    <input type="text" id="description" name="description" value="<%= entry.description %>" required>
                </div>
                <div class="itens">
                    <label for="value">Valor:</label>
                    <input type="number" id="value" name="value" step="0.1" value="<%= entry.value %>" required>
                </div>
            </section>

            <section class="containerItens">
                <div class="itens">
                    <label for="due_date">Data vencimento:</label>
                    <input type="date" id="due_date" name="due_date" value="<%= entry.due_date %>" required>
                </div>
                <div class="itens">
                    <label for="payment_date">Data pagamento:</label>
                    <input type="date" id="payment_date" name="payment_date" value="<%= entry.payment_date %>">
                </div>
            </section>
            
            <section class="containerItens">
                <div class="itens">
                    <label for="account">Conta:</label>
                    <select id="account" name="account" required>
                        <option value="Conta Corrente" <%= entry.account === 'Conta Corrente' ? 'selected' : '' %>>Conta Corrente</option>
                        <option value="Conta Poupança" <%= entry.account === 'Conta Poupança' ? 'selected' : '' %>>Conta Poupança</option>
                    </select>
                </div>
                <div class="itens">
                    <label for="status">Status:</label>
                    <select id="status" name="status" required>
                        <option value="Lancada" <%= entry.status === 'Lancada' ? 'selected' : '' %>>Lancada</option>
                        <option value="Confirmada" <%= entry.status === 'Confirmada' ? 'selected' : '' %>>Confirmada</option>
                        <option value="Paga" <%= entry.status === 'Paga' ? 'selected' : '' %>>Paga</option>
                        <option value="Cancelada" <%= entry.status === 'Cancelada' ? 'selected' : '' %>>Cancelada</option>
                    </select>
                </div>
            </section>

            <label for="comments">Comentarios:</label>
            <select id="comments" name="comments" required>
                <option value="on" <%= entry.comments === 'on' ? 'selected' : '' %>>On</option>
                <option value="off" <%= entry.comments === 'off' ? 'selected' : '' %>>Off</option>
            </select>

            <button type="submit">Editar</button>
        </form>
    </div>
    <script>
        document.getElementById('userForm').addEventListener('submit', function(event) {
            event.preventDefault();
            
            const formData = new FormData(this);
            const jsonData = {};
            formData.forEach((value, key) => {
                jsonData[key] = value;
            });

            console.log(jsonData);
            const entryId = window.location.pathname.split('/').pop();
            
            fetch(`/admin/editar-entrada/${entryId}`, {
                method: 'PUT',
                body: JSON.stringify(jsonData),
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                if (response.ok) {
                    return response.json();
                }
                throw new Error('Network response was not ok.');
            })
            .then(data => {
                console.log('Entry updated:', data);
                window.location.href = `http://localhost:3000/admin/cadastrar-entrada`;
            })
            .catch(error => {
                console.error('There was a problem with the fetch operation:', error);
            });
        });

        const typeDropdown = document.getElementById('type');
        const categoriesDropdown = document.getElementById('categories');
        const categoriesList = <%- JSON.stringify(categoriesList) %>;
        const entryCategories = <%- JSON.stringify(entry.categories) %>;
        typeDropdown.addEventListener('change', () => {
        const selectedType = typeDropdown.value;
        categoriesDropdown.innerHTML = "";
        const filteredCategories = categoriesList.filter(category => category.type === selectedType);
        filteredCategories.forEach(category => {
                const option = document.createElement('option');
                option.value = category.description;
                option.textContent = category.description;
                categoriesDropdown.appendChild(option);
            });
        });

        typeDropdown.dispatchEvent(new Event('change'));
        categoriesDropdown.value = `${entryCategories}`;
    </script>
</body>
</html>